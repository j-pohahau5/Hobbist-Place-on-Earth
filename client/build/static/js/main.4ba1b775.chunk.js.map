{"version":3,"sources":["pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","components/Header /index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_jsx","children","_jsxs","className","style","border","LOGIN_USER","gql","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","_templateObject5","AuthService","_classCallCheck","_createClass","key","value","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","Login","props","_useState","useState","email","password","_useState2","_slicedToArray","formState","setFormState","_useMutation","useMutation","_useMutation2","login","_useMutation2$","error","data","handleChange","event","_event$target","target","name","_objectSpread","_defineProperty","handleFormSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$login","_data","wrap","_context","prev","next","preventDefault","console","log","variables","sent","Auth","t0","stop","_x","apply","arguments","Link","to","onSubmit","placeholder","type","onChange","cursor","message","Header","loggedIn","_Fragment","getProfile","username","onClick","logout","Footer","useLocation","navigate","useNavigate","pathname","role","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","concat","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ba1b775.chunk.js","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/client';\n\n\n// import { QUERY_CATEGORY } from '../utils/queries';\n\nconst Home = () => {\n  // const { loading, data } = useQuery(QUERY_CATEGORY);\n  // const category = data?.categories || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-10 mb-3 p-3\"\n          style={{ border: '1px dotted #1a1a1a' }}\n        >\n\n        </div>\n        <div>testing</div>\n        <div className=\"col-12 col-md-8 mb-3\">\n\n            <div>Loading...</div>\n\n            />\n          \n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_CATEGORY = gql`\n  mutation addCategory ( $title: $title, $description: $description){\n    addCategory ( $title: $title, $description: $description) {\n      _id\n      title\n      description\n      hobby {\n        _id\n        title\n      }\n      user {\n        _id\n        firstname\n      }\n    }\n    \n  }\n`;\n\nexport const ADD_HOBBY = gql`\nmutation addHobby ( $title: $title, $description: $description){\n  addHobby ( $title: $title, $description: $description) {\n    title\n    description\n    category {\n      _id\n      title\n    }\n    user {\n      _id\n      firstname\n    }\n  }\n  \n}\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-dark mb-4 py-3 flex-row align-center\">\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n            <h1 className=\"m-0\">Hobbies Place </h1>\n          </Link>\n          <p className=\"m-0\">Get into the mind of a programmer.</p>\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate(-1)}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h4>\n          Hobbiest Place on Earth{' '}\n          <span\n            className=\"emoji\"\n            role=\"img\"\n            aria-label=\"heart\"\n            aria-hidden=\"false\"\n          >\n            ❤️\n          </span>{' '}\n          by the Team 7.\n        </h4>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\n// import Signup from './pages/Signup';\nimport Login from './pages/Login';\n// import SingleHobby from './pages/SingleHobby';\nimport Header from './components/Header ';\nimport Footer from './components/Footer';\n// import Hobby from './pages/Hobbies';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('id_token');\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div className=\"flex-column justify-flex-start min-100-vh\">\n                    <Header />\n                    <div className=\"container\">\n                        <Routes>\n                            <Route\n                                path=\"/\"\n                                element={<Home />}\n                            />\n                            <Route\n                                path=\"/login\"\n                                element={<Login />}\n\n                        \n                            />\n                            {/* <Route\n                                path=\"/signup\"\n                                element={<Signup />}\n                            /> */}\n                            {/* <Route\n                                path=\"/login\"\n                                element={<Login />}\n\n                        \n                            />\n                            <Route\n                                path=\"/hobbies/:hobbyId\"\n                                element={<SingleHobby />}\n\n                            />\n                            <Route\n                                path=\"/hobbies\"\n                                element={<Hobby />}\n\n                            /> */}\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}