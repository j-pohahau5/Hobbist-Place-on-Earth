{"version":3,"sources":["utils/mutations.js","utils/queries.js","utils/auth.js","components/HobbyForm/index.js","components/CategoryForm/index.js","components/CategoryList/index.js","pages/Home.js","pages/Signup.js","pages/Login.js","components/CommentForm/index.js","pages/SingleHobby.js","assets/lolo.png","components/Header/index.js","components/Footer/index.js","pages/SingleCategory.js","pages/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["gql","_templateObject","_taggedTemplateLiteral","LOGIN_USER","_templateObject2","ADD_USER","_templateObject3","REMOVE_CATEGORY","_templateObject4","DELETE_HOBBY","_templateObject5","DELETE_COMMENT","_templateObject6","ADD_CATEGORY","_templateObject7","ADD_HOBBY","_templateObject8","ADD_COMMENT","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","QUERY_USER","QUERY_ALL_HOBBIES","QUERY_SINGLE_CATEGORY","QUERY_CATEGORIES","QUERY_COMMENTS","QUERY_SINGLE_HOBBY","QUERY_ME","getProfile","decode","this","getToken","loggedIn","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","login","idToken","setItem","window","location","assign","logout","reload","withSwal","_ref","category","swal","title","setTitle","useState","description","setDescription","selectedCategory","setSelectedCategory","characterCount","setCharacterCount","loading","data","useQuery","categories","options","map","value","_id","label","categoriesOptions","setCategoriesOptions","useEffect","option","find","addHobby","Loading","error","mutationError","useMutation","update","cache","_ref2","readQuery","query","updatedCategories","hobbies","writeQuery","e","console","handleChange","event","name","target","length","_jsxs","className","children","_jsx","Auth","_Fragment","concat","onSubmit","async","preventDefault","variables","fire","icon","confirmButtonText","then","setTimeout","onChange","Select","isClearable","type","disabled","message","Link","to","addCategory","showConfirmButton","timer","Swal","CategoryList","onDelete","onClick","Home","removeCategory","modify","fields","existingCategories","arguments","undefined","readField","filter","categoryRef","style","border","HobbyForm","CategoryForm","categoryId","Signup","formState","setFormState","username","email","password","addUser","log","placeholder","cursor","Login","props","thisHobby","content","setContent","addComment","users","err","lineHeight","resize","SingleHobby","hobbyId","useParams","loadingHobbies","hobbiesData","loadingComments","commentsData","refetch","deleteComment","hobby","comments","comment","user","commentId","handleDeleteComment","CommentForm","Header","backgroundColor","src","logo","alt","Footer","useLocation","navigate","useNavigate","pathname","role","SingleCategory","id","loadingCategory","categoryData","deleteHobby","fontSize","fontStyle","text","handleDelete","Profile","userParam","me","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","InMemoryCache","App","ApolloProvider","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96ad29e9.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const REMOVE_CATEGORY = gql`\n  mutation removeCategory($categoryId: ID!) {\n    removeCategory(categoryId: $categoryId) {\n      _id\n    }\n    \n  }\n`;\n\nexport const DELETE_HOBBY = gql`\n  mutation removeHobby($hobbyId: ID!, $categoryId: ID!) {\n    removeHobby(hobbyId: $hobbyId, categoryId: $categoryId) {\n      _id\n    }\n    \n  }\n`;\n\nexport const DELETE_COMMENT = gql`\n  mutation removeComment($hobbyId: ID!, $commentId: ID!) {\n    removeComment(hobbyId: $hobbyId, commentId: $commentId) {\n      _id\n    }\n    \n  }\n`;\n\nexport const ADD_CATEGORY = gql`\n  mutation addCategory ( $title: String!, $description: String!){\n    addCategory ( title: $title, description: $description) {\n\n      title\n      description\n\n    }\n  }\n`;\n\nexport const ADD_HOBBY = gql`\n\nmutation addHobby ($categories: ID!, $title: String!, $description: String!){\n  addHobby ( categories: $categories, title: $title, description: $description) {\n\n    title\n    description\n    categories {\n      _id\n      title\n    }\n    users {\n      _id\n    }\n  }\n  \n}\n`;\n\nexport const ADD_COMMENT = gql`\nmutation addComment ( $hobbies: ID!, $content: String! ){\n  addComment ( hobbies: $hobbies, content: $content ) {\n    content\n    hobbies {\n      _id\n      title\n    } \n    users {\n      username\n    }\n    \n  }\n  \n}\n`;\n// users {\n//       _id\n//     }\nexport const ADD_HOBBY_LIKE = gql`\nmutation addHobbyLike ($_id: String!, $likes: Int!){\n  addHobbyLike ( likes: $likes ) {\n    likes\n  }\n}\n`;\n\nexport const ADD_COMMENT_LIKE = gql`\nmutation addCommentLike ($_id: String!, $likes: Int!){\n  addCommentLike ( likes: $likes ) {\n    likes\n  }\n}\n`;\n\nexport const ADD_HOBBY_DISLIKE = gql`\nmutation addHobbyDislike ($_id: String!, $dislikes: Int!){\n  addHobbyLike ( dislikes: $dislikes ) {\n    dislikes\n  }\n  \n}\n`;\n\nexport const ADD_COMMENT_DISLIKE = gql`\nmutation addCommentDislike ($_id: String!, $dislikes: Int!){\n  addCommentLike ( dislikes: $dislikes ) {\n    dislikes\n  }\n  \n}\n`;\n","import { gql } from '@apollo/client';\n\n\nexport const QUERY_USER = gql`\n  query users {\n    users {\n      _id\n      email\n      username\n      hobbies{\n        _id\n        title\n        description\n      }\n      comments{\n        _id\n        content\n      }\n\n    }\n  }\n`;\n\nexport const QUERY_ALL_HOBBIES = gql`\nquery hobbies($categories: ID! ) {\n  hobbies(categories: $categories) {\n    _id\n    title\n    description\n    categories{\n      _id\n      title\n      description\n    }\n\n  }  \n}\n`;\n\nexport const QUERY_SINGLE_CATEGORY = gql`\n  query category($categoryId: ID! ) {\n    category(categoryId: $categoryId) {\n      _id\n      title\n      description\n\n    }  \n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  query categories {\n    categories {\n      _id\n      title\n      description\n      hobbies{\n        _id\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_COMMENTS = gql`\n  query comments{\n    comments {\n      _id\n      content\n      users {\n        username\n      }\n      hobbies { category }\n    }\n  }\n`;\n\nexport const QUERY_COMMENTS = gql`\n  query comments($hobbies: ID!) {\n    comments(hobbies: $hobbies) {\n      _id\n      content\n      hobbies{\n        _id\n        title\n        description\n      }\n      users {\n        _id\n        username\n        \n      }\n    }\n  }\n`;\n\n\nexport const QUERY_SINGLE_HOBBY = gql`\n  query hobby($hobbyId: ID!) {\n    hobby(hobbyId: $hobbyId) {\n      _id\n      title\n      description\n      categories {\n        title\n      }\n      comments {\n        _id\n        content\n        users {\n          _id\n          username\n          \n        }\n      }\n      users {\n        _id\n        username\n        \n      }\n    }\n  }\n`;\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      hobbies{\n        _id\n        title\n        description\n      }\n    }\n  }\n`;\n\n","import decode from 'jwt-decode';\n\nclass AuthService {\n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n\n}\n\nexport default new AuthService();","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Select from 'react-select';\nimport { ADD_HOBBY } from '../../utils/mutations';\nimport { QUERY_CATEGORIES, QUERY_SINGLE_CATEGORY } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\nimport { withSwal } from 'react-sweetalert2';\n\nconst HobbyForm = ({ category, swal }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [characterCount, setCharacterCount] = useState(0);\n//   const HobbyFormWithSwal = withSwal(HobbyForm);\n  const { loading, data } = useQuery(QUERY_CATEGORIES);\n\n  const categories = data?.categories || [];\n\n  const options = categories.map((category) => ({\n    value: category._id,\n    label: category.title,\n  }))\n\n  const [categoriesOptions, setCategoriesOptions] = useState([]);\n\n  useEffect(() => {\n    setCategoriesOptions(categories.map((category) => ({\n      value: category._id,\n      label: category.title,\n    })))\n  }, [categories]);\n\n  useEffect(() => {\n    if (category) {\n      const option = categoriesOptions.find((option) => option.label === category);\n      if (!selectedCategory || option !== selectedCategory) {\n        setSelectedCategory(option);\n      }\n    }\n  }, [category, categoriesOptions, selectedCategory]);\n\n  const [addHobby, { loading: Loading, error: mutationError }] = useMutation(ADD_HOBBY, {\n    update(cache, { data: { addHobby } }) {\n      try {\n\n        const { categories } = cache.readQuery({ query: QUERY_SINGLE_CATEGORY });\n        const updatedCategories = categories.map((category) => {\n          if (category._id === addHobby.categories[0]._id) {\n            return {\n              ...category,\n              hobbies: [...category.hobbies, addHobby],\n            };\n          } else {\n            return category;\n          }\n        });\n        cache.writeQuery({\n          query: QUERY_CATEGORIES,\n          data: { categories: updatedCategories }\n        });\n      } catch (e) {\n        console.error(e)\n      }\n    },\n  });\n\n\n const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    try {\n      await addHobby({\n        variables: {\n          title,\n          description,\n          categories: selectedCategory.value,\n        },\n      });\n  \n      setTitle('');\n      setDescription('');\n      setSelectedCategory(null);\n  \n      // Display success alert\n      swal.fire({\n        title: 'Hobby added',\n        icon: 'success',\n        confirmButtonText: 'OK',\n      }).then(() => {\n        window.location.reload();\n      });\n  \n      // Refresh the page after a short delay\n      setTimeout(() => window.location.reload(), 2000);\n    } catch (error) {\n      console.error('Error creating hobby:', error);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'description' && value.length <= 280) {\n      setDescription(value);\n    } else {\n      setTitle(value);\n    }\n    setCharacterCount(title.length + description.length);\n  };\n\n\n\n  return (\n    <div className='form-group'>\n      <h5>Add a New Hobby</h5>\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || mutationError ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form onSubmit={handleSubmit}>\n\n            <div >\n              <label> Title:\n              </label>\n            </div>\n\n            <input\n              value={title}\n              onChange={handleChange}\n            />\n\n\n            <label>\n              Description:\n            </label>\n\n            <input\n              name='description'\n              value={description}\n              onChange={handleChange}\n            />\n\n            <label>\n              Category:\n            </label>\n\n            <Select\n              options={options}\n              value={selectedCategory}\n              onChange={setSelectedCategory}\n              isClearable\n            />\n\n            <button type=\"submit\" disabled={!title || !description}>\n              {Loading ? 'Creating...' : 'Create Hobby'}\n            </button>\n            {mutationError && (\n              <div className='col-12 my-3 bg-danger text-white p-3'>\n                Error creating hobby: {mutationError.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to add a Hobby. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default withSwal(HobbyForm);\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useMutation } from '@apollo/client';\nimport { ADD_CATEGORY } from '../../utils/mutations';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { withSwal } from 'react-sweetalert2';\nimport Swal from 'sweetalert2';\nimport Auth from '../../utils/auth';\n\nconst CategoryForm = ({ swal }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addCategory, { loading, error }] = useMutation(ADD_CATEGORY, {\n    update(cache, { data: { addCategory } }) {\n      try {\n        const { categories } = cache.readQuery({ query: QUERY_CATEGORIES })\n        cache.writeQuery({\n          query: QUERY_CATEGORIES,\n          data: { categories: [...categories, addCategory] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'description') {\n      setDescription(value);\n    } if (name === 'title') {\n      setTitle(value);\n    }\n\n    setCharacterCount(title.length + description.length);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addCategory({\n        variables: {\n          title,\n          description,\n        },\n      });\n\n      setTitle('');\n      setDescription('');\n      setCharacterCount(0);\n\n      swal.fire({\n        icon: 'success',\n        title: 'Category added!',\n        showConfirmButton: false,\n        timer: 1500\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <h5>Add a New Category</h5>\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${characterCount === 280 || error ? 'text-danger' : ''\n              }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form onSubmit={handleSubmit}>\n            <label>\n              Title:   \n            </label>\n            <input\n              name='title'\n              value={title}\n              onChange={handleChange}\n            />\n\n            <label>\n              Description:\n            </label>\n            <input\n              name='description'\n              value={description}\n              onChange={handleChange}\n            />\n\n            <div>\n              <button type=\"submit\" disabled={!title || !description}>\n                {loading ? 'Creating...' : 'Create Category'}\n              </button>\n            </div>\n\n            {error && (\n              <div className='col-12 my-3 bg-danger text-white p-3'>\n                Error creating Category: {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to add a Category. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default withSwal(CategoryForm, { Swal });\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CategoryList = ({\n  categories,\n  title,\n  description,\n  onDelete,\n}) => {\n  if (!categories.length) {\n    return <h3>No Categories Yet</h3>;\n  }\n\n  return (\n    <div>\n      { <h3>{title}</h3> && <p>{description}</p>}\n      {categories &&\n        categories.map((category) => (\n            \n\n          <div key={category._id} className=\"card mb-3\">\n            <h4 className=\"card-header bg-primary text-light p-2 m-0\">\n            </h4>\n            <div className=\"card-body bg-light p-2\">\n              <p>{category.title}</p>\n              <p>{category.description}</p>\n            </div>\n            <div>\n                <button\n                className=\"btn btn-danger btn-block btn-squared\"\n                onClick={() => onDelete(category._id)}\n              >\n                Delete\n              </button>\n            </div>\n\n            <div className=\"card-footer\">\n              \n              <Link\n                className=\"btn btn-primary btn-block btn-squared\"\n                to={`/categories/${category._id}`}\n              >\n                Join the discussion on this category.\n              </Link>\n            </div>\n\n          </div>\n\n \n        ))}\n    </div>\n  );\n};\n\nexport default CategoryList;\n","import React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\n\n// import Header from '../components/Header';\n// import Footer from '../components/Footer';\nimport HobbyForm from '../components/HobbyForm';\nimport CategoryForm from '../components/CategoryForm';\nimport CategoryList from '../components/CategoryList';\nimport { QUERY_CATEGORIES } from '../utils/queries';\n\nimport { REMOVE_CATEGORY } from '../utils/mutations';\nimport Swal from 'sweetalert2';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_CATEGORIES);\n  const categories = data?.categories || [];\n\n  const [removeCategory] = useMutation(REMOVE_CATEGORY, {\n    update(cache, { data: { removeCategory } }) {\n      cache.modify({\n        fields: {\n          categories(existingCategories = [], { readField }) {\n            return existingCategories.filter(\n              (categoryRef) => removeCategory._id !== readField('_id', categoryRef)\n            );\n          },\n        },\n      });\n    },\n  });\n\n  const handleDelete = async (categoryId) => {\n    try {\n      await removeCategory({\n        variables: { categoryId },\n      });\n      await Swal.fire({\n        icon: 'success',\n        title: 'Category deleted!',\n        showConfirmButton: false,\n        timer: 1500\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  \n  // const handleDeleteCategory = (categoryId) => {\n  //   // delete the category with categoryId\n  // }\n\n  return (\n\n      <div className='container flex-direction: row'>\n        <aside className=\"container col-xl-4 col-md-12 mb-12 p-3\">\n            `<div\n              className=\"col-12 col-md-10 mb-3 p-3\"\n              style={{ border: '1px dotted #1a1a1a' }}\n            >\n              <HobbyForm />\n              `</div>\n            `<div\n              className=\"col-12 col-md-10 mb-3 p-3\"\n              style={{ border: '1px dotted #1a1a1a' }}\n            >\n              <CategoryForm />\n            </div>\n          </aside>\n        <div className=\"container col-xl-8 col-md-12 mb-12 p-3\">\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <CategoryList\n      categories={categories}\n      title=\"Categories\"\n      description=\"Select a category to see its hobbies\"\n      onDelete={handleDelete}\n    />\n          )}\n        </div>\n      </div>\n\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n    \n        try {\n          const { data } = await addUser({\n            variables: { ...formState },\n          });\n    \n          Auth.login(data.addUser.token);\n        } catch (e) {\n          console.error(e);\n        }\n      };    \n\n      return (\n        <main className=\"flex-row justify-center mb-4\">\n          <div className=\"col-12 col-lg-10\">\n            <div className=\"card\">\n              <h4 className=\"text-bg-primary p-3\">Sign Up</h4>\n              <div className=\"card-body\">\n                {data ? (\n                  <p>\n                    Success! You may now head{' '}\n                    <Link to=\"/\">back to the homepage.</Link>\n                  </p>\n                ) : (\n                  <form onSubmit={handleFormSubmit}>\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your username\"\n                      name=\"username\"\n                      type=\"text\"\n                      value={formState.name}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"Your email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formState.email}\n                      onChange={handleChange}\n                    />\n                    <input\n                      className=\"form-input\"\n                      placeholder=\"******\"\n                      name=\"password\"\n                      type=\"password\"\n                      value={formState.password}\n                      onChange={handleChange}\n                    />\n                    <button\n                      className=\"btn btn-block btn-primary\"\n                      style={{ cursor: 'pointer' }}\n                      type=\"submit\"\n                    >\n                      Submit\n                    </button>\n                  </form>\n                )}\n    \n                {error && (\n                  <div className=\"my-3 p-3 bg-danger text-white\">\n                    {error.message}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </main>\n      );\n};\n\nexport default Signup;\n\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card\">\n          <h4 className=\"text-bg-primary p-3\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit}>\n                <input\n                  className=\"form-input\"\n                  placeholder=\"Your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"form-input\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block btn-primary\"\n                  style={{ cursor: 'pointer' }}\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n\n            {error && (\n              <div className=\"my-3 p-3 bg-danger text-white\">\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { withSwal } from 'react-sweetalert2';\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ thisHobby, swal }) => {\n  const [content, setContent] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          hobbies: thisHobby,\n          content,\n          users: Auth.getProfile().data.username,\n        },\n      });\n\n      setContent('');\n      setCharacterCount(0);\n      swal.fire({\n        title: 'Comment added',\n        icon: 'success',\n        confirmButtonText: 'OK',\n      }).then(() => {\n        window.location.reload();\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'content' && value.length <= 280) {\n      setContent(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h5>What are your thoughts on this hobby?</h5>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"content\"\n                placeholder=\"Add your comment...\"\n                value={content}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default withSwal(CommentForm);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_SINGLE_HOBBY, QUERY_COMMENTS } from '../utils/queries';\nimport CommentForm from '../components/CommentForm';\nimport { DELETE_COMMENT } from '../utils/mutations';\nimport Swal from 'sweetalert2';\n\nconst SingleHobby = () => {\n  const { hobbyId } = useParams();\n\n  const { loading: loadingHobbies, data: hobbiesData } = useQuery(QUERY_SINGLE_HOBBY, {\n    variables: { hobbyId: hobbyId },\n  });\n\n  const { loading: loadingComments, data: commentsData, refetch } = useQuery(QUERY_COMMENTS, {\n    variables: { hobbies: hobbyId },\n  });\n\n  const [deleteComment] = useMutation(DELETE_COMMENT);\n\n  if (loadingHobbies || loadingComments) {\n    return <div>Loading...</div>;\n  }\n\n  const hobby = hobbiesData?.hobby || {};\n  const comments = commentsData?.comments || [];\n\n  const handleDeleteComment = async (commentId) => {\n    try {\n      await deleteComment({\n        variables: { commentId, hobbyId: hobbyId },\n      });\n      await Swal.fire({\n        icon: 'success',\n        title: 'Comment deleted!',\n        showConfirmButton: false,\n        timer: 1500\n      });\n      refetch();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <div className='my-6'>\n        <h2>{hobby.title}</h2>\n        <p>{hobby.description}</p>\n      </div>\n      <div className='my-6'>\n\n        <h3>Comments:</h3>  \n\n      </div>\n      {comments.map((comment) => (\n        <div key={comment._id} className='my-6'>\n\n          {comment.users.map(user => (\n              <h4 key={user._id}>\n                Commented by: {user.username}\n              </h4>\n            ))}\n\n          <p>Content: {comment.content}</p>\n          <button\n            className='btn btn-danger btn-sm'\n            onClick={() => handleDeleteComment(comment._id)}\n          >\n            Delete\n          </button>\n        </div>\n      ))}\n      <div className='my-6'>\n        <CommentForm thisHobby={hobbyId} />\n        <br></br>\n        <br></br>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleHobby;\n","export default __webpack_public_path__ + \"static/media/lolo.392f62d0.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n// import image from '../../assets/fon.png';\nimport Auth from '../../utils/auth';\nimport logo from '../../assets/lolo.png';\n \n\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header style={{\n      backgroundColor: '#eee8b6', border: '3px solid #5b8c80'}}>\n\n      <div className=\"container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"a\" to=\"/\">\n            <h1 className=\"m-2\">Hobbiest Place On Earth</h1>\n          </Link>\n\n\n            <img src={logo} alt=\"\"/>\n\n          <p className=\"m-0\"></p>\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/me\">\n                {Auth.getProfile().data.username}'s profile\n              </Link>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n\n  );\n};\n\n\nexport default Header;","import React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nconst Footer = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  return (\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\n      <div className=\"container text-center mb-5\">\n        {location.pathname !== '/' && (\n          <button\n            className=\"btn btn-dark mb-3\"\n            onClick={() => navigate(-1)}\n          >\n            &larr; Go Back\n          </button>\n        )}\n        <h6>\n          Hobbiest Place on Earth{' '}\n          <span\n            className=\"emoji\"\n            role=\"img\"\n            aria-label=\"heart\"\n            aria-hidden=\"false\"\n          >\n            ❤️\n          </span>{' '}\n          by the Team 7.\n        </h6>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\n// import HobbyList from '../components/HobbyList';\nimport HobbyForm from '../components/HobbyForm';\nimport { QUERY_SINGLE_CATEGORY, QUERY_ALL_HOBBIES } from '../utils/queries';\nimport { DELETE_HOBBY } from '../utils/mutations';\nimport Swal from 'sweetalert2';\n\nconst SingleCategory = () => {\n  const { id } = useParams();\n\n  const { loading: loadingCategory, data: categoryData } = useQuery(QUERY_SINGLE_CATEGORY, {\n    variables: { categoryId: id },\n  });\n\n  const { loading: loadingHobbies, data: hobbiesData, refetch } = useQuery(QUERY_ALL_HOBBIES, {\n    variables: { categories: id },\n  });\n\n  const [deleteHobby] = useMutation(DELETE_HOBBY);\n\n  if (loadingCategory || loadingHobbies) {\n    console.log(\"hobbiesData:\", hobbiesData);\n    return <div>loading...</div>;\n  }\n\n  if (!hobbiesData) {\n    console.error(\"hobbiesData is undefined\");\n    return <div>Error fetching hobbies data</div>;\n  }\n  console.log('Data:', hobbiesData);\n  const category = categoryData.category;\n  const hobbies = hobbiesData.hobbies;\n\n \n  const handleDelete = async (hobbyId) => {\n    try {\n      await deleteHobby({\n        variables: { hobbyId, categoryId: id },\n      });\n      await Swal.fire({\n        title: 'Hobby deleted',\n        text: 'The hobby has been deleted successfully.',\n        icon: 'success',\n      });\n      refetch();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  \n\n  return (\n      <div>\n        <div>\n          <h2 className=\"card-header bg-dark text-light p-2 m-0\">\n            {category.title} <br />\n            <span style={{ fontSize: '1rem' }}>\n          One of my category is {category.title}\n\n          </span>\n        </h2>\n      <div className=\"bg-light-profile-cat py-4\">\n        <blockquote\n          className=\"p-4-profile-cat\"\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            lineHeight: '1.5',\n          }}  \n        >\n          {category.description}\n        </blockquote>\n      </div>\n\n      <div className=\"my-3 container flex-direction: row\">\n          \n\n        <div className='my-5 container col-xl-8 col-md-12 mb-12 p-3'>\n          <h3>Hobbies:</h3>\n            {hobbies.map((hobby) => (\n              <div key={hobby._id}>\n                <Link className=\"a\" to={`/hobbies/${hobby._id}`}>\n                  <h4>{hobby.title}</h4>\n                </Link>\n              <p className=\"profile-hobby-cont\">{hobby.description}</p>\n              <Link\n                className=\"btn btn-primary btn-block btn-squared\"\n                to={`/hobbies/${hobby._id}`}\n              >\n                Join the discussion on this hobby.\n              </Link>\n            <br></br>\n              <button\n                className=\"btn btn-danger btn-block btn-squared\"\n                onClick={() => handleDelete(hobby._id)}\n              >\n                Delete\n              </button>\n              <br></br>\n            </div>\n          ))}\n        </div>\n        <div className=\"my-6\">\n          <HobbyForm category={category.title} categoryId={category._id} />\n  \n          <br></br>\n          <br></br>\n        </div>\n        <div></div>\n    </div>\n    </div>\n    </div>\n  );\n};  \n\nexport default SingleCategory;","import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport HobbyForm from '../components/HobbyForm';\nimport HobbyList from '../components/HobbyList';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\n\n// import Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || {};\n  console.log(user);\n  const hobbies = user.hobbies;\n  // navigate to personal profile page if username is yours\n  //   if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n  //     return <Navigate to=\"/me\" />;\n  //   }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  };\n\n  //   if (!user?.username) {\n  //     return (\n  //       <h4>\n  //         You need to be logged in to see this. Use the navigation links above to\n  //         sign up or log in!\n  //       </h4>\n  //     );\n  //   }\n\n  return (\n    <div>\n      <div className=\"flex-row justify-center mb-3\">\n        <h2 className=\"col-12 col-md-10 bg-dark text-light p-3 mb-5\">\n          Viewing {`${user.username}'s your`} profile.\n        </h2>\n\n        <div className=\"col-12 col-md-10 mb-5\">\n          {/* <HobbyList\n            hobbies={user.hobbies}\n            title={`${user.username}'s hobbies...`}\n            showTitle={false}\n            showUsername={false}\n          /> */}\n          <h3> Hobbies:</h3>\n          <div className='my-5'>\n            {hobbies.map((hobby) => (\n              <div key={hobby._id} >\n                {/* <p>{username}</p> */}\n                <p>Title: {hobby.title}</p>\n                <p>Description: {hobby.description}</p>\n                <Link\n              className=\"btn btn-primary btn-block btn-squared\"\n              to={`/hobbies/${hobby._id}`}\n            >\n              Join the discussion on this hobby.\n            </Link> \n              </div>\n\n            ))}\n\n\n          </div>\n\n        </div>\n        {!userParam && (\n          <div\n            className=\"col-12 col-md-10 mb-3 p-3\"\n          // style={{ border: '1px dotted #1a1a1a' }}\n          >\n            <HobbyForm />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleHobby from './pages/SingleHobby';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport SingleCategory from './pages/SingleCategory';\nimport Profile from './pages/Profile';\n\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('id_token');\n    // return the headers to the context so httpLink can read them\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div className=\"flex-column justify-flex-start min-150-vh\">\n                    <Header />\n                    <div className=\"container\">\n                        <Routes>\n                            <Route\n                                path=\"/\"\n                                element={<Home />}\n                            />\n                            <Route\n                                path=\"/login\"\n                                element={<Login />}\n                            />\n                            <Route\n                                path=\"/signup\"\n                                element={<Signup />}\n                        \n                            />\n                            <Route\n                                path=\"/categories/:id\"\n                                element={<SingleCategory />}\n                        \n                            />\n                            <Route\n                                path=\"/hobbies/:hobbyId\"\n                                element={<SingleHobby />}\n\n                            />\n                            <Route\n                                path=\"/me\"\n                                element={<Profile />}\n\n                            />\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n"],"sourceRoot":""}